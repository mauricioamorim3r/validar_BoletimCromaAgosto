#!/usr/bin/env python3
"""
Teste espec√≠fico para reproduzir o erro de relat√≥rio ID 23
Sistema de Valida√ß√£o de Boletins - SGM
"""

import requests
import traceback

def testar_relatorio_local():
    """Testa o relat√≥rio localmente"""
    try:
        print("üß™ Testando Relat√≥rio Local")
        print("=" * 50)
        
        # Testar primeiro com servidor local
        local_url = "http://127.0.0.1:8888/relatorio/23"
        
        try:
            response = requests.get(local_url, timeout=10)
            if response.status_code == 200:
                print("‚úÖ Relat√≥rio local funcionando - Status 200")
                if "Internal Server Error" in response.text:
                    print("‚ùå Mas cont√©m erro interno na resposta")
                else:
                    print("‚úÖ Resposta HTML v√°lida")
            else:
                print(f"‚ùå Erro local - Status: {response.status_code}")
        except requests.exceptions.ConnectionError:
            print("‚ö†Ô∏è  Servidor local n√£o est√° rodando")
        except Exception as e:
            print(f"‚ùå Erro ao testar local: {e}")
            
    except Exception as e:
        print(f"‚ùå Erro durante teste: {e}")
        traceback.print_exc()

def testar_relatorio_producao():
    """Testa o relat√≥rio em produ√ß√£o"""
    try:
        print("\nüåê Testando Relat√≥rio em Produ√ß√£o")
        print("=" * 50)
        
        prod_url = "https://validar-boletimcromatografia.onrender.com/relatorio/23"
        
        try:
            response = requests.get(prod_url, timeout=30)
            print(f"Status Code: {response.status_code}")
            
            if response.status_code == 500:
                print("‚ùå Internal Server Error confirmado em produ√ß√£o")
                print("Poss√≠veis causas:")
                print("  ‚Ä¢ Diferen√ßas no banco de dados")
                print("  ‚Ä¢ Problema de conex√£o com banco")
                print("  ‚Ä¢ Erro nas fun√ß√µes de c√°lculo CEP")
                print("  ‚Ä¢ Problema nas valida√ß√µes ANP")
            elif response.status_code == 200:
                print("‚úÖ Relat√≥rio produ√ß√£o funcionando")
            else:
                print(f"‚ùå Erro inesperado: {response.status_code}")
                
        except requests.exceptions.Timeout:
            print("‚è∞ Timeout - servidor pode estar sobrecarregado")
        except Exception as e:
            print(f"‚ùå Erro ao testar produ√ß√£o: {e}")
            
    except Exception as e:
        print(f"‚ùå Erro durante teste produ√ß√£o: {e}")

def main():
    """Fun√ß√£o principal"""
    print("üîç Diagn√≥stico do Erro de Relat√≥rio")
    print("Testando tanto local quanto produ√ß√£o")
    print("=" * 60)
    
    testar_relatorio_local()
    testar_relatorio_producao()
    
    print("\n" + "=" * 60)
    print("üí° Pr√≥ximos passos:")
    print("1. Se local funciona e produ√ß√£o n√£o:")
    print("   ‚Ä¢ Verificar diferen√ßas no banco de dados")
    print("   ‚Ä¢ Verificar logs do Render")
    print("   ‚Ä¢ Fazer deploy das corre√ß√µes")
    print("2. Se ambos falham:")
    print("   ‚Ä¢ Investigar fun√ß√£o calculate_cep_limits")
    print("   ‚Ä¢ Verificar validacao_prazos_anp")

if __name__ == "__main__":
    main()